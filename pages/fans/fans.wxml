<view id="fansPage">
    <view style='text-align:center;color:red;'>
      <text>{{fansData}}</text>
    </view>
    <view wx:if="{{view == 'WEBVIEW'}}" > WEBVIEW </view>
    <view wx:elif="{{view == 'APP'}}"> APP </view>
    <view wx:else="{{view == 'MINA'}}"> MINA </view>
    
</view>
<!-- 动画模板 -->
<view>
  <view catchtap='animationClick'>请点击开始你的动画</view>
  <view animation="{{animationData}}" style="background:red;height:200rpx;width:200rpx"></view>
</view>




<!-- 模板处理 -->
<template name="staffName">
  <view>
    FirstName: {{firstName}}, LastName: {{lastName}}
  </view>
</template>

<template is="staffName" data="{{...staffA}}"></template>
<template is="staffName" data="{{...staffB}}"></template>
<template is="staffName" data="{{...staffC}}"></template>

<!-- 点击事件 -->
<view bindtap="add" data-alpha-beta="黄小明" > 点击查看:{{count}} 微信小程序版本号:{{version}}</view>

<!-- 点击查看弹出层 -->
<view catchtap='clickOut'>点击我显示出来</view>

<!-- 循环测试 -->
<view wx:for="{{[1, 2, 3, 4, 5, 6, 7, 8, 9]}}" wx:for-item="i">
  <view wx:for="{{[1, 2, 3, 4, 5, 6, 7, 8, 9]}}" wx:for-item="j">
    <view wx:if="{{i <= j}}">
      {{i}} * {{j}} = {{i * j}}
    </view>
  </view>
</view>

<!-- 事件、冒泡测试 bind事件绑定不会阻止冒泡事件向上冒泡，catch事件绑定可以阻止冒泡事件向上冒泡。
点击 inner view 会先后调用handleTap3和handleTap2(因为tap事件会冒泡到 middle view，而 middle view 阻止了 tap 事件冒泡，不再向父节点传递)，点击 middle view 会触发handleTap2，点击 outer view 会触发handleTap1。
-->
<view id="outer" bindtap="handleTap1">
  点击outer view
  <view id="middle" catchtap="handleTap2">
    点击middle view
    <view id="inner" bindtap="handleTap3">
      点击inner view
    </view>
  </view>
</view>

<!-- import模板测试 -->
<import src="import.wxml"/>
<template is="huangxiaoming" data="{{text: '黄小明模板测试'}}"/>

<!-- include测试 -->
<include src="header.wxml"/>
<view> 这里是include测试的Body </view>
<include src="footer.wxml"/>

<!-- 点击滚动到首页 -->
<view catchtap='scrollTop'>点击滚动到首页</view>